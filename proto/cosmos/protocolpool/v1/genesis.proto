syntax = "proto3";
package cosmos.protocolpool.v1;

option go_package = "cosmossdk.io/x/protocolpool/types";

import "gogoproto/gogo.proto";
import "cosmos/protocolpool/v1/types.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "cosmos_proto/cosmos.proto";

// GenesisState defines the protocolpool module's genesis state.
message GenesisState {
  // ContinuousFund defines the continuous funds at genesis.
  repeated ContinuousFund continuous_fund = 1;
  // Budget defines the budget proposals at genesis.
  repeated SimpleBudget budget = 2;
}

message SimpleBudget {
  // recipient_address is the address of the recipient who can claim the budget.
  string recipient_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // total_budget is the total amount allocated for the budget.
  cosmos.base.v1beta1.Coin total_budget = 2;
  // start_time is the time when the budget becomes claimable.
  google.protobuf.Timestamp start_time = 3 [(gogoproto.stdtime) = true];
  // tranches is the number of times the total budget amount is to be distributed.
  uint64 tranches = 4;
  // Period is the time interval(number of seconds) at which funds distribution should be performed.
  // For example, if a period is set to 3600, it represents an action that
  // should occur every hour (3600 seconds).
  google.protobuf.Duration period = 5 [(gogoproto.stdduration) = true];
}